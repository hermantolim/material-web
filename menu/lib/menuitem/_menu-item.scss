//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// go/keep-sorted start
@use 'sass:list';
@use 'sass:map';
@use 'sass:string';
// go/keep-sorted end
// go/keep-sorted start
@use '../../../ripple/ripple';
@use '../../../sass/theme';
@use '../../../tokens';
// go/keep-sorted end

$_custom-property-prefix: 'menu';

@mixin theme($theme) {
  $theme: theme.validate-theme(tokens.md-comp-menu-values(), $theme);
  $theme: _resolve-tokens($theme);
  $theme: theme.create-theme-vars($theme, $_custom-property-prefix);

  @include theme.emit-theme-vars($theme);
}

@mixin styles() {
  $tokens: tokens.md-comp-menu-values();
  $tokens: _resolve-tokens($tokens);
  $tokens: theme.create-theme-vars($tokens, $_custom-property-prefix);

  :host {
    @each $token, $value in $tokens {
      --_#{$token}: #{$value};
    }
  }

  .list-item {
    :host([active]) &,
    :host(:active) &,
    &:focus {
      background-color: var(--_list-item-selected-container-color);
    }
  }

  /*
      Set the ripple opacity to 0 if there is a submenu that is hovered.
    */
  .list-item:has(.submenu:hover) {
    /*
        Have to use ripple theme directly because :has selector in this case does
        not work in this case with the :has selector, thus we cannot override the
        custom props set in :host
      */
    @include ripple.theme(
      (
        hover-opacity: 0,
      )
    );
  }
}

@function _resolve-tokens($tokens) {
  @return _remove-unused-tokens($tokens);
}

// removes unused tokens
@function _remove-unused-tokens($tokens) {
  $unused-tokens: ();
  @each $token in map-keys($tokens) {
    $index: string.index($token, 'list-item');

    @if not $index {
      $unused-tokens: list.append($unused-tokens, $token);
    }
  }

  @each $token in $unused-tokens {
    $tokens: map.remove($tokens, $token);
  }

  @return $tokens;
}
